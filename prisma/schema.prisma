generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id           String   @id @unique
  email        String
  firstName    String
  lastName     String
  profileImage String
  userRole     Role     @default(USER)

  verificationStatus VerificationStatus @default(pending)
  verification VerificationData[]
  shops        Shop[]
  createdAt    DateTime @default(now())
}

model Shop {
  id          String   @id @default(uuid())
  name        String
  description String
  location    String
  owner       User     @relation(fields: [userId], references: [id])
  shopImage   String[]
  userId      String
  products    Product[]

  createdAt   DateTime @default(now())
}

model Product {
  id          String   @id @default(uuid())
  name        String
  price       String
  currency    String   // Add this line to include the currency field
  status      ProductStatus
  description String
  images      String[]
  category    Category
  SellerPhone String
  location    String

  updatedAt   DateTime @default(now())
  createdAt   DateTime @default(now())
  shop        Shop     @relation(fields: [shopId], references: [id])
  shopId      String
}

model VerificationData {
  id             String   @id @default(uuid())
  name           String
  email          String
  address        String
  identityNumber String
  photoUrl       String[]
  studentDocument String[]
  phoneNumber    String
  user           User     @relation(fields: [userId], references: [id])
  userId         String
}

enum VerificationStatus{
  pending
  success
  failed
}

enum Category {
  fashion
  electronics
  food
  exchanges
  baggages
  others
}

enum ProductStatus {
  draft
  published
  archived
} 

enum Role {
  ADMIN
  USER
}

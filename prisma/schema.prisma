generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model Product {
  id          String    @id @default(uuid())
  name        String
  price       Float?
  currency    String?    @default("IDR")
  isPublished Boolean   @default(false)
  description String?
  images      String[]
  categoryId  String?
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  phone String?
  location    String?
  shopId      String
  shop        Shop      @relation(fields: [shopId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum VerificationStatus {
  PENDING
  APPROVED
  REJECTED
}

model VerificationData {
  id              String   @id @default(uuid())
  name            String?
  email           String?
  address         String?
  identityNumber  String?
  photoWithDocument String?
  photoUrl        String?
  studentDocument String?
  phoneNumber     String?
  status          VerificationStatus @default(PENDING)
  isPublished     Boolean  @default(false)
  shopId          String
  shop            Shop     @relation(fields: [shopId], references: [id], onDelete: Cascade)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
model Shop {
  id            String             @id @default(uuid())
  name          String
  images        String?
  description   String?
  location      String?
  isPublished   Boolean           @default(false)
  isVerified    Boolean           @default(false)
  userId        String
  products      Product[]
  verifications VerificationData[]
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Currency {
  IDR
  USD
  EUR
}